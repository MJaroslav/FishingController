def buildprop = new Properties()
file("build.properties").withInputStream { buildprop.load(it) }

subprojects {
    buildscript {
        repositories {
            mavenCentral()
        }
    }

    apply plugin: 'java'
    apply plugin: 'idea'

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
    sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

    idea.module.inheritOutputDirs = true

    configurations {
        shade

        compile.extendsFrom(shade)
    }

    dependencies {
        compileOnly "org.projectlombok:lombok:${buildprop.lombok_version}"
        annotationProcessor "org.projectlombok:lombok:${buildprop.lombok_version}"

        testCompileOnly "org.projectlombok:lombok:${buildprop.lombok_version}"
        testAnnotationProcessor "org.projectlombok:lombok:${buildprop.lombok_version}"
    }

    tasks.withType(Jar).each {
        it.doLast {
            duplicatesStrategy = DuplicatesStrategy.EXCLUDE
            configurations.shade.each { dep ->
                from project.zipTree(dep)
            }
        }
    }

    task devJar(type: Jar) {
        classifier = 'dev'
        from sourceSets.main.output
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives devJar
        archives sourcesJar
    }
}

