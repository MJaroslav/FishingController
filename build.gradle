buildscript {
    repositories {
        mavenCentral()
        maven {
            name = 'sonatype'
            url = 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
        maven {
            name = 'forge'
            url = 'https://maven.minecraftforge.net/'
        }
    }
    // Fixed forge gradle fork
    dependencies {
        classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
            changing = true
        }
    }
}

repositories {
	maven {
        name 'ProfMobius Repo'
        url 'http://mobiusstrip.eu/maven' // Why https don't work?
    }
    maven {
        name 'ChickenBones Repo'
        url 'https://chickenbones.net/maven/'
    }
}

apply plugin: 'forge'

version = mod_version
group = mod_group
archivesBaseName = "$mc_version-$mod_name" // MC version at begin added for correct core mod loading.

//
// Use UTF-8 encoding and compile on JDK 1.8
//
compileJava.options.encoding = 'UTF-8'
sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

//
// Idea resources visibility
// 

// It"s don"t work for me -.-
// idea.module.inheritOutputDirs = true

// Use IDEA building method instead of Gradle. It"s don"t work for me too >.<

// Only this work for me:
sourceSets {
    main {
        output.resourcesDir = output.getClassesDirs().getSingleFile()
    }
}

//
// Artifacts
//

// Used for adding external dependencies to mod jar insted of "compile"
configurations {
    shade

    compile.extendsFrom(shade)
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

task srcJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
}

// Manifest attributes for all artifacts
tasks.withType(Jar) {
    if(name == "Jar" || name == "deobfJar" || name == "srcJar")
        manifest {
            attributes 'FMLAT': 'mjutils_at.cfg'
            attributes 'FMLCorePlugin': 'com.github.mjaroslav.mjutils.hook.MJUtilsHookLoader'
            attributes 'FMLCorePluginContainsFMLMod': 'true'
        }
}

artifacts {
    archives srcJar, deobfJar
}

//
// Minecraft, sources and resources
//
minecraft {
    version = "$mc_version-$forge_version-$mc_version"
    runDir = mc_run_dir
    replace '@VERSION@', project.version
}

dependencies {
    compile "codechicken:CodeChickenLib:$ccl_version:dev"
    compile "codechicken:CodeChickenCore:$ccc_version:dev"
    compile "codechicken:NotEnoughItems:$nei_version:dev"
    compile "mcp.mobius.waila:Waila:$waila_version"
    shade "blue.endless:jankson:$jankson_version"
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    
    rename '(.+_at.cfg)', 'META-INF/$1'

    // Adding external dependencies to mod jar
    // And i don't know why this don't work in Jar tasks
    configurations.shade.each { dep ->
        from project.zipTree(dep)
    }
}

